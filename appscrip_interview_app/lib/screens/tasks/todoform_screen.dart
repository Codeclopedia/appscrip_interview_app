import 'package:appscrip_interview_app/models/taskmodel.dart';
import 'package:flutter/material.dart';
import 'package:flutter_riverpod/flutter_riverpod.dart';

class TaskFormScreen extends ConsumerWidget {
  final Todo? task;
  final _formKey = GlobalKey<FormState>();
  final _titleController = TextEditingController();
  final _descriptionController = TextEditingController();
  DateTime? _dueDate;
  String? _priority;
  String? _status;
  int? _assignedUserId;

  TaskFormScreen({this.task});

  @override
  Widget build(BuildContext context, WidgetRef ref) {
    if (task != null) {
      _titleController.text = task!.title;
      _descriptionController.text = task!.description;
      _dueDate = task!.dueDate;
      _priority = task!.priority;
      _status = task!.status;
      _assignedUserId = task!.assignedUserId;
    }

    return Scaffold(
      appBar: AppBar(
        title: Text(task == null ? 'Create Task' : 'Edit Task'),
      ),
      body: Padding(
        padding: const EdgeInsets.all(16.0),
        child: Form(
          key: _formKey,
          child: Column(
            children: [
              TextFormField(
                controller: _titleController,
                decoration: const InputDecoration(labelText: 'Title'),
                validator: (value) {
                  if (value == null || value.isEmpty) {
                    return 'Please enter a title';
                  }
                  return null;
                },
              ),
              TextFormField(
                controller: _descriptionController,
                decoration: const InputDecoration(labelText: 'Description'),
                validator: (value) {
                  if (value == null || value.isEmpty) {
                    return 'Please enter a description';
                  }
                  return null;
                },
              ),
              // Add more fields for due date, priority, status, and assigned user
              ElevatedButton(
                onPressed: () async {
                  if (_formKey.currentState!.validate()) {
                    final newTask = Todo(
                      id: task?.id ?? 0, // Auto-generated by the API
                      title: _titleController.text,
                      description: _descriptionController.text,
                      dueDate: _dueDate!,
                      priority: _priority!,
                      status: _status!,
                      assignedUserId: _assignedUserId!,
                    );

                    if (task == null) {
                      await ref.read(taskProvider.notifier).addTask(newTask);
                    } else {
                      await ref.read(taskProvider.notifier).updateTask(newTask);
                    }

                    if (context.mounted) {
                      Navigator.pop(context);
                    }
                  }
                },
                child: Text(task == null ? 'Create Task' : 'Update Task'),
              ),
            ],
          ),
        ),
      ),
    );
  }
}
